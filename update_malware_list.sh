#!/bin/bash

# Définir l'URL de la liste des hashes SHA256 depuis GitHub
MALWARE_LIST_URL="https://raw.githubusercontent.com/cyberinstitut/ci-305/main/full_sha256.txt"

# Emplacement du fichier malware dans /var/ossec/etc/lists
OUTPUT_FILE="/var/ossec/etc/lists/malware"

# Créer le répertoire si nécessaire
if [ ! -d "/var/ossec/etc/lists" ]; then
    echo "Le répertoire /var/ossec/etc/lists n'existe pas. Création du répertoire..."
    mkdir -p /var/ossec/etc/lists
fi

# Télécharger la liste des hashes SHA256 depuis GitHub
echo "Téléchargement de la liste des hashes depuis GitHub..."
curl -o /tmp/full_sha256.txt $MALWARE_LIST_URL

# Vérifier si le fichier a été téléchargé correctement
if [ -f "/tmp/full_sha256.txt" ]; then
    echo "Téléchargement terminé avec succès."
else
    echo "Échec du téléchargement. Vérifiez l'URL ou la connexion."
    exit 1
fi

# Formater la liste des hashes avec un deux-points à la fin de chaque ligne
echo "Formatage des hashes en ajoutant un deux-points..."
awk '!/^#/{print $1":";}' /tmp/full_sha256.txt > $OUTPUT_FILE

# Si la commande AWK ne fonctionne pas, utiliser la commande alternative
if [ $? -ne 0 ]; then
    echo "La première commande AWK a échoué. Utilisation de la commande alternative..."
    awk '/^[^#]/{sub(/\r$/, ""); print $0 ":"}' /tmp/full_sha256.txt > $OUTPUT_FILE
fi

# Vérifier si le fichier malware a été créé correctement
if [ -f "$OUTPUT_FILE" ]; then
    echo "Les hashes ont été formatés et enregistrés avec succès dans le fichier $OUTPUT_FILE."
else
    echo "Erreur lors de la création du fichier $OUTPUT_FILE."
    exit 1
fi

# Afficher un message de succès
echo "Script terminé avec succès. Le fichier $OUTPUT_FILE contenant les hashes formatés est prêt."

